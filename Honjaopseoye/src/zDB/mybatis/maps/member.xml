<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="membermap">
	<select id="tel_sel" resultType="int" parameterType="map">
		select nvl2((select mem_id from members where mem_tel=#{mem_tel}),0,1) from dual
	</select>
	<select id="id_sel" resultType="int" parameterType="map">
		select nvl2((select mem_id from members where mem_id=#{mem_id}),0,1) from dual
	</select>
	<insert id="join" parameterType="map">
		INSERT INTO members(mem_id, mem_tel, mem_name, mem_addr, mem_email, mem_pw, mem_birth,mem_gender,mem_hobby,mem_job)
		VALUES (#{mem_id},#{mem_tel},#{mem_name},#{mem_addr},#{mem_email},#{mem_pw},#{mem_birth},#{mem_gender},#{mem_hobby},#{mem_job})
	</insert>
	<select id="select" parameterType="map" resultType="map">
		 select * from members,grade where mem_id = grade_id and mem_id = #{mem_id}
	</select>
	<delete id="delete" parameterType="java.util.Map">
		DELETE FROM members
		WHERE mem_id = #{mem_id}
	</delete>
	<insert id="grade" parameterType="map">
		INSERT INTO grade (grade_id, grade_level, grade_point)
		VALUES (#{mem_id},'브론즈',0)
	</insert>
	<update id="update" parameterType="map">
		 UPDATE members SET mem_name=#{mem_name,jdbcType=VARCHAR}, mem_tel=#{mem_tel,jdbcType=VARCHAR}, mem_addr=#{mem_addr,jdbcType=VARCHAR}, 
		 					mem_email=#{mem_email,jdbcType=VARCHAR}, mem_gender=#{mem_gender,jdbcType=VARCHAR}, mem_birth=#{mem_birth,jdbcType=VARCHAR}, mem_hobby=#{mem_hobby,jdbcType=VARCHAR}, mem_job=#{mem_job,jdbcType=VARCHAR}
	     WHERE mem_id=#{mem_id,jdbcType=VARCHAR}
	</update>
	<select id="login" resultType="String" parameterType="map">
		select nvl2(
	       (select '1' from dual where exists(select mem_name from members where mem_id=#{mem_id}))
	       ,(select nvl((select '1' from members where mem_id=#{mem_id} and mem_pw=#{mem_pw}),'-1') from dual)
	       ,'0'
	       )  as MEM_NAME
	     from dual 
	</select>
	<select id="check" resultType="String" parameterType="map">
		select nvl2(
        (select '1' from dual where exists(select mem_id from members where mem_name = #{ins_name}))
       ,(select nvl((select '1' from members where mem_name=#{ins_name} and mem_tel =#{mem_tel}), '-1') from dual)
       ,'0'
       ) as mem_id
       from dual
	</select>
	<select id="check2" resultType="String" parameterType="map">
		select nvl2(
        (select '1' from dual where exists(select mem_id from members where mem_name = #{e_name}))
       ,(select nvl((select '1' from members where mem_name=#{e_name} and mem_email =#{e_mail}), '-1') from dual)
       ,'0'
       ) as mem_id
       from dual
	</select>
	<select id="idSearch" resultType="map" parameterType="map">
      select mem_id, mem_name from members
         <if test="ins_name!=null"> 
            where mem_name = #{ins_name}<!-- map의 키값(내가 화면에서 넘긴 name 값과 같을 것) -->
         </if>
         <if test="mem_tel!=null">
            and mem_tel = #{mem_tel}
         </if>
   </select>
   <select id="e_idSearch" resultType="map" parameterType="map">
      select mem_id, mem_name from members
           where mem_name = #{e_name}
            and mem_email = #{e_mail}
   </select>
   
   	<select id="pwCheck" resultType="String" parameterType="map">
		select nvl2(
        (select '1' from dual where exists(select mem_pw from members where mem_id = #{mem_id}))
       ,(select nvl((select '1' from members where mem_id=#{mem_id} and mem_tel =#{mem_tel}), '-1') from dual)
       ,'0'
       ) as mem_pw
       from dual
	</select>
	<select id="pwCheck2" resultType="String" parameterType="map">
		select nvl2(
        (select '1' from dual where exists(select mem_pw from members where mem_id = #{e_id}))
       ,(select nvl((select '1' from members where mem_id=#{e_id} and mem_email =#{e_mail}), '-1') from dual)
       ,'0'
       ) as mem_pw
       from dual
	</select>
   
   <select id="pwSearch" resultType="map" parameterType="map">
   	select mem_pw, mem_name from members
   		<if test="mem_id!=null">
   			where mem_id = #{mem_id}
   		</if>
   		<if test="mem_tel!=null">
   			and mem_tel = #{mem_tel}
   		</if>
   </select>
   
   <select id="e_pwSearch" resultType="map" parameterType="map">
   	select mem_pw, mem_name from members
   		<if test="e_id!=null">
   			where mem_id = #{e_id}
   		</if>
   		<if test="e_mail!=null">
   			and mem_email = #{e_mail}
   		</if>
   </select>
</mapper>